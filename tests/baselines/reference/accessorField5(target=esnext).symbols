=== tests/cases/conformance/classes/propertyMemberDeclarations/accessorField5.ts ===
class C1 {
>C1 : Symbol(C1, Decl(accessorField5.ts, 0, 0))

    accessor ["w"]: any;
>["w"] : Symbol(C1["w"], Decl(accessorField5.ts, 0, 10))
>"w" : Symbol(C1["w"], Decl(accessorField5.ts, 0, 10))

    accessor ["x"] = 1;
>["x"] : Symbol(C1["x"], Decl(accessorField5.ts, 1, 24))
>"x" : Symbol(C1["x"], Decl(accessorField5.ts, 1, 24))

    static accessor ["y"]: any;
>["y"] : Symbol(C1["y"], Decl(accessorField5.ts, 2, 23))
>"y" : Symbol(C1["y"], Decl(accessorField5.ts, 2, 23))

    static accessor ["z"] = 2;
>["z"] : Symbol(C1["z"], Decl(accessorField5.ts, 3, 31))
>"z" : Symbol(C1["z"], Decl(accessorField5.ts, 3, 31))
}

declare var f: any;
>f : Symbol(f, Decl(accessorField5.ts, 7, 11))

class C2 {
>C2 : Symbol(C2, Decl(accessorField5.ts, 7, 19))

    // @ts-ignore
    accessor [f()] = 1;
>[f()] : Symbol(C2[f()], Decl(accessorField5.ts, 8, 10))
>f : Symbol(f, Decl(accessorField5.ts, 7, 11))
}
